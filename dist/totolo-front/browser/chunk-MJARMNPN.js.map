{
  "version": 3,
  "sources": ["src/app/components/my-orders/my-orders.component.ts", "src/app/components/my-orders/my-orders.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Order, OrderService } from '../../service/order.service';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-my-orders',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './my-orders.component.html',\r\n  styleUrls: ['./my-orders.component.css']\r\n})\r\nexport class MyOrdersComponent implements OnInit {\r\n  orders$: Observable<Order[]>;\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.orders$ = new Observable<Order[]>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n    this.loadOrders();\r\n  }\r\n\r\n  loadOrders(): void {\r\n    this.orders$ = this.orderService.getOrders();\r\n    this.orders$.subscribe({\r\n      error: (err) => {\r\n        this.errorMessage = 'Error al cargar los pedidos. Por favor, intenta nuevamente.';\r\n        console.error('Error fetching orders:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  getOrderTotal(order: any): number {\r\n    if (!order.orderItems || order.orderItems.length === 0) {\r\n      return 0;\r\n    }\r\n    return order.orderItems.reduce((total: number, item: any) => total + (item.price * item.quantity), 0);\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/']);\r\n  }\r\n} ", "<div class=\"container mx-auto p-6 min-h-screen bg-gray-50\">\r\n  <div class=\"bg-white p-6 sm:p-8 rounded-lg shadow-lg\">\r\n    <div class=\"flex flex-col sm:flex-row justify-between items-center mb-6 border-b pb-4\">\r\n      <h1 class=\"text-3xl font-bold text-gray-800\">Mis Pedidos</h1>\r\n      <button class=\"btn btn-outline btn-primary mt-4 sm:mt-0\" (click)=\"goBack()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" /></svg>\r\n        Volver al inicio\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-error shadow-lg\">\r\n      <div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current flex-shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n        <span>{{ errorMessage }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"orders$ | async as orders; else loading\">\r\n      <div *ngIf=\"orders.length > 0; else noOrders\" class=\"space-y-6\">\r\n        <div *ngFor=\"let order of orders\" class=\"card bg-base-100 border border-gray-200 shadow-md transition-shadow hover:shadow-xl\">\r\n          <div class=\"card-body\">\r\n            <div class=\"flex flex-col sm:flex-row justify-between items-start\">\r\n              <div>\r\n                <h2 class=\"card-title text-xl text-primary\">Pedido #{{ order.id }}</h2>\r\n                <p class=\"text-sm text-gray-500\">\r\n                  Dirección de envío: <span class=\"font-medium\">{{ order.address }}</span>\r\n                </p>\r\n              </div>\r\n              <div class=\"badge mt-2 sm:mt-0\"\r\n                   [ngClass]=\"{\r\n                     'badge-warning': order.status === 'IN_PROCESS',\r\n                     'badge-success': order.status === 'SENT',\r\n                     'badge-error': order.status === 'CANCELLED'\r\n                   }\">\r\n                {{ order.status }}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"divider my-4\"></div>\r\n\r\n            <!-- Items del pedido -->\r\n            <div class=\"space-y-3\">\r\n              <h3 class=\"font-semibold text-lg mb-2\">Resumen de productos</h3>\r\n              <div *ngFor=\"let item of order.orderItems\" class=\"flex justify-between items-center p-3 bg-gray-50 rounded-md\">\r\n                <div>\r\n                  <p class=\"font-medium\">{{ item.product?.name || 'Producto' }}</p>\r\n                  <p class=\"text-sm text-gray-600\">Cantidad: {{ item.quantity }}</p>\r\n                </div>\r\n                <p class=\"font-semibold text-gray-800\">{{ (item.price * item.quantity) | number:'1.2-2' }} €</p>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Total -->\r\n            <div class=\"flex justify-end items-center mt-4 pt-4 border-t border-gray-200\">\r\n              <span class=\"text-lg font-bold mr-4\">Total del Pedido:</span>\r\n              <span class=\"text-2xl font-bold text-primary\">{{ getOrderTotal(order) | number:'1.2-2' }} €</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #loading>\r\n      <div class=\"text-center py-16\">\r\n        <span class=\"loading loading-lg loading-spinner text-primary\"></span>\r\n        <p class=\"mt-4 text-gray-600\">Cargando tus pedidos...</p>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #noOrders>\r\n      <div class=\"text-center py-16 bg-gray-50 rounded-lg\">\r\n        <svg class=\"w-16 h-16 mx-auto text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\"></path></svg>\r\n        <h3 class=\"mt-4 text-2xl font-semibold text-gray-700\">Aún no tienes pedidos</h3>\r\n        <p class=\"mt-2 text-gray-600\">Parece que no has realizado ninguna compra todavía.</p>\r\n        <button class=\"btn btn-primary mt-6\" routerLink=\"/\">Explorar productos</button>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div> "],
  "mappings": "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",
  "names": []
}
