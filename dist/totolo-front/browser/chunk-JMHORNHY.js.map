{
  "version": 3,
  "sources": ["src/app/components/order-list-admin/order-list-admin.component.ts", "src/app/components/order-list-admin/order-list-admin.component.html"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderService, Order } from '../../service/order.service';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'order-list-admin',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './order-list-admin.component.html',\r\n  styleUrls: ['./order-list-admin.component.css']\r\n})\r\nexport class OrderListAdminComponent {\r\n  pedidos$: Observable<Order[]> = new Observable<Order[]>();\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.checkAuthStatus();\r\n  }\r\n\r\n  private checkAuthStatus(): void {\r\n    if (!this.authService.isLoggedIn() || !this.authService.isAdmin()) {\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    this.authService.checkSession().subscribe({\r\n      next: () => this.loadOrders(),\r\n      error: (err) => {\r\n        console.error('Sesión inválida:', err);\r\n        this.authService.logout();\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadOrders(): void {\r\n    this.pedidos$ = this.orderService.getAllOrders();\r\n  }\r\n\r\n  cambiarEstado(orderId: number, nuevoEstado: string): void {\r\n    this.orderService.updateOrderStatus(orderId, nuevoEstado).subscribe({\r\n      next: () => {\r\n        alert(`Estado cambiado a ${nuevoEstado}`);\r\n        // Recargar la lista de pedidos después de cambiar estado\r\n        this.pedidos$ = this.orderService.getAllOrders();\r\n      },\r\n      error: (err) => {\r\n        console.error('Error al cambiar estado:', err);\r\n        alert('Error al cambiar estado: ' + (err.error?.message || err.message || 'Error desconocido'));\r\n      }\r\n    });\r\n  }\r\n\r\n  volverAlDashboard(): void {\r\n    this.router.navigate(['/admin/dashboard']);\r\n  }\r\n\r\n  // Calcular el total de un pedido\r\n  getOrderTotal(pedido: any): number {\r\n    if (!pedido.orderItems || pedido.orderItems.length === 0) {\r\n      return 0;\r\n    }\r\n    \r\n    return pedido.orderItems.reduce((total: number, item: any) => {\r\n      return total + (item.price * item.quantity);\r\n    }, 0);\r\n  }\r\n}\r\n", "<!-- Mensaje de error de autenticación -->\r\n<div *ngIf=\"errorMessage\" class=\"alert alert-error mb-4\">\r\n  <span>{{ errorMessage }}</span>\r\n</div>\r\n\r\n<div *ngIf=\"pedidos$ | async as pedidos; else loadingTemplate\" class=\"p-6\">\r\n  <h2 class=\"text-2xl font-bold mb-4\">Lista de pedidos</h2>\r\n\r\n  <div class=\"grid grid-cols-1 gap-4\">\r\n    <div *ngFor=\"let pedido of pedidos\" class=\"card bg-base-100 shadow-xl p-4\">\r\n      <div class=\"card-body\">\r\n        <h3 class=\"card-title\">Pedido #{{ pedido.id }}</h3>\r\n        \r\n        <!-- Cliente -->\r\n        <p><strong>Cliente:</strong> {{ pedido.customerName || 'No disponible' }}</p>\r\n        \r\n        <!-- Fecha -->\r\n        <p><strong>Fecha:</strong> {{ pedido.date | date:'dd/MM/yyyy HH:mm' }}</p>\r\n        <p><strong>Estado:</strong> {{ pedido.status }}</p>\r\n\r\n        <!-- Items del pedido -->\r\n        <div *ngIf=\"pedido.orderItems && pedido.orderItems.length > 0\" class=\"mt-4\">\r\n          <h4 class=\"font-semibold mb-2\">Productos:</h4>\r\n          <div class=\"space-y-2\">\r\n            <div *ngFor=\"let item of pedido.orderItems\" class=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\r\n              <div class=\"flex-1\">\r\n                <span class=\"font-medium\">{{ item.productName || item.product?.name || 'Producto' }}</span>\r\n                <span class=\"text-gray-600 ml-2\">x{{ item.quantity }}</span>\r\n              </div>\r\n              <div class=\"text-right\">\r\n                <span class=\"font-medium\">{{ item.price | number:'1.2-2' }} €</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Total del pedido -->\r\n          <div class=\"mt-3 pt-2 border-t border-gray-200\">\r\n            <div class=\"flex justify-between items-center font-bold\">\r\n              <span>Total:</span>\r\n              <span>{{ getOrderTotal(pedido) | number:'1.2-2' }} €</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-actions mt-4 space-x-2\">\r\n          <button class=\"btn btn-warning\" (click)=\"cambiarEstado(pedido.id, 'IN_PROCESS')\">En proceso</button>\r\n          <button class=\"btn btn-info\" (click)=\"cambiarEstado(pedido.id, 'SENT')\">Enviado</button>\r\n          <button class=\"btn btn-error\" (click)=\"cambiarEstado(pedido.id, 'CANCELLED')\">Cancelado</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"mt-6\">\r\n    <button class=\"btn btn-secondary\" (click)=\"volverAlDashboard()\">Volver al Dashboard</button>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #loadingTemplate>\r\n  <div class=\"text-center p-8\">\r\n    <span class=\"loading loading-spinner loading-lg\"></span>\r\n    <p class=\"mt-4\">Cargando pedidos...</p>\r\n  </div>\r\n</ng-template>\r\n"],
  "mappings": "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",
  "names": []
}
